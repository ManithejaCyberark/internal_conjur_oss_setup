#!/bin/bash

set +x 
rm -rf .env
docker-compose down -v
# docker-compose build
# docker-compose up -d conjur
# docker-compose up -d proxy
docker-compose exec -T conjur conjurctl wait -r 240

#Generate the master key
docker-compose run --no-deps --rm conjur data-key generate > data_key
export CONJUR_DATA_KEY="$(< data_key)"

cp updated_docker_compose.yml docker-compose.yml

#create services
docker-compose up -d

sleep 10

echo "created myConjurAccount and login"
echo "***************"
echo " "
#admin_api_key=$(docker-compose exec -T conjur conjurctl role retrieve-key dev:user:admin | tr -d '\r')
admin_api_key=$(docker-compose exec conjur conjurctl account create myConjurAccount | awk '/API key for admin/ {print $NF}'| tr 'Â  \n\r' ' '|awk '{$1=$1};1')
export CONJUR_AUTHN_API_KEY=$admin_api_key
echo $CONJUR_AUTHN_API_KEY
echo " "
echo "****************"
echo "initiating myConjurAccount and logging in as a admin user"
docker-compose exec client conjur init -u https://proxy -a myConjurAccount --self-signed
echo " "
echo "****************"
echo "Log in to Conjur as admin"
echo " "

docker-compose exec client conjur login -i admin -p $CONJUR_AUTHN_API_KEY

echo "****************"
echo " "

echo "loading authentication policy authn-jwt-jenkins.yml"
docker-compose exec client conjur policy load -b root -f /policy/authn-jwt-jenkins.yml
docker-compose exec client conjur policy load -b root -f  /policy/jenkins-projects.yml

echo "loading authentication values"
#conjur_cli:8
docker-compose exec client conjur variable set -i conjur/authn-jwt/jenkins/issuer -v 'http://localhost:8084'
docker-compose exec client conjur variable set -i conjur/authn-jwt/jenkins/audience -v 'jenkins-server'
docker-compose exec client conjur variable set -i conjur/authn-jwt/jenkins/token-app-property -v 'jenkins_name'
docker-compose exec client conjur variable set -i conjur/authn-jwt/jenkins/identity-path -v 'jenkins/projects'
